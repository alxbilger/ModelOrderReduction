name: CI

on:
  workflow_dispatch:
  pull_request:
  push:

jobs:
  build-and-test:
    name: Run on ${{ matrix.os }} with SOFA ${{ matrix.sofa_branch }} and python ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        sofa_branch: [master]
        python_version: ['3.8']

    steps:
      - name: (Mac) Workaround for homebrew
        shell: bash
        if: runner.os == 'macOS'
        run: |
            rm -f /usr/local/bin/2to3
            rm -f /usr/local/bin/idle3
            rm -f /usr/local/bin/pydoc3
            rm -f /usr/local/bin/python3
            rm -f /usr/local/bin/python3-config
            rm -f /usr/local/bin/2to3-3.11
            rm -f /usr/local/bin/idle3.11
            rm -f /usr/local/bin/pydoc3.11
            rm -f /usr/local/bin/python3.11
            rm -f /usr/local/bin/python3.11-config

      - name: Setup SOFA and environment
        id: sofa
        uses: sofa-framework/sofa-setup-action@v4
        with:
          sofa_root: ${{ github.workspace }}/sofa
          sofa_version: ${{ matrix.sofa_branch }}
          sofa_scope: 'full'
          sofa_with_sofapython3: 'false'
          python_version: '${{ matrix.python_version }}'

      - name: Install SofaPython3
        shell: bash
        run: |
          SofaPython3_ROOT="$GITHUB_WORKSPACE/SofaPython3"
          mkdir -p "${{ runner.temp }}/sp3_tmp/zip" "${{ runner.temp }}/sp3_tmp/binaries" "$SofaPython3_ROOT"
          url="https://github.com/sofa-framework/SofaPython3/releases/download"
          url="${url}/release-master-nightly/SofaPython3_master-nightly_python-${{ matrix.python_version }}_for-SOFA-${{ matrix.sofa_branch }}_${{ runner.os }}.zip"
          echo "Getting SofaPython3 from $url"
          curl --output "${{ runner.temp }}/sp3_tmp/SofaPython3.zip" -L $url
          unzip -qq "${{ runner.temp }}/sp3_tmp/SofaPython3.zip" -d "${{ runner.temp }}/sp3_tmp/binaries"
          mv "${{ runner.temp }}"/sp3_tmp/binaries/SofaPython3_*/* "$SofaPython3_ROOT"
          echo "SofaPython3_ROOT=$SofaPython3_ROOT" | tee -a $GITHUB_ENV
          echo "SofaPython3_DIR=$SofaPython3_ROOT/lib/cmake/SofaPython3" | tee -a $GITHUB_ENV

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          path: ${{ env.WORKSPACE_SRC_PATH }}

      - name: Scenes tests
        shell: bash
        run: |
          cd "$WORKSPACE_SRC_PATH"
          SofaPython3_LIB="$SofaPython3_ROOT"/lib
          ls -la "$SofaPython3_LIB"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            SofaPython3_LIB="$SofaPython3_LIB/SofaPython3.lib"
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            SofaPython3_LIB="$SofaPython3_LIB/libSofaPython3.so"
          else
            SofaPython3_LIB="$SofaPython3_LIB/libSofaPython3.dylib"
          fi
          echo "$SofaPython3_LIB"
          for f in $(find ./doc/examples -type f -name "*.py" | xargs grep -r "createScene" | cut -d':' -f1 | uniq); do
            echo "Testing $f..."
            "$SOFA_ROOT"/bin/runSofa${{ steps.sofa.outputs.exe }} -l "$SofaPython3_LIB" "$f$" -g batch -n 10
          done
          
